{"version":3,"file":"component---src-pages-index-tsx-250b65c7a197a51a1f58.js","mappings":"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","sources":["webpack://gatsby-starter-for-devseop/./src/components/Main/PostItem.tsx","webpack://gatsby-starter-for-devseop/./src/hooks/useInfiniteScroll.tsx","webpack://gatsby-starter-for-devseop/./src/components/Main/PostList.tsx","webpack://gatsby-starter-for-devseop/./node_modules/decode-uri-component/index.js","webpack://gatsby-starter-for-devseop/./node_modules/split-on-first/index.js","webpack://gatsby-starter-for-devseop/./node_modules/filter-obj/index.js","webpack://gatsby-starter-for-devseop/./node_modules/query-string/base.js","webpack://gatsby-starter-for-devseop/./node_modules/query-string/index.js","webpack://gatsby-starter-for-devseop/./src/pages/index.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport { Link } from 'gatsby';\nimport { PostFrontmatterType } from 'types/PostItem.types';\n\ntype PostItemProps = PostFrontmatterType & { link: string };\n\nconst PostItemWrapper = styled.article`\n  // wrapper layout style\n  display: flex;\n  cursor: pointer;\n  padding: 24px;\n  border-radius: 16px;\n\n  &:hover {\n    background-color: rgba(34, 34, 34, 0.05);\n  }\n\n  &:active {\n    background-color: rgba(34, 34, 34, 0.1);\n  }\n\n  // content item layout style\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  margin: auto;\n`;\n\nconst ContentItemHeader = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nconst Title = styled.h2`\n  display: -webkit-box;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: normal;\n  overflow-wrap: break-word;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  font-size: 28px;\n  font-weight: 700;\n  color: #222;\n`;\n\nconst Date = styled.h6`\n  font-size: 14px;\n  font-weight: 400;\n  color: rgba(34, 34, 34, 0.4);\n`;\n\nconst CategoryItem = styled.h6`\n  font-size: 14px;\n  font-weight: 400;\n  margin-right: 8px;\n  padding: 6px 12px;\n  border: 1px solid rgba(34, 34, 34, 0.8);\n  border-radius: 16px;\n\n  &:nth-of-type(1) {\n    color: #fff;\n    background-color: rgba(34, 34, 34, 1);\n  }\n`;\n\nconst Summary = styled.h5`\n  display: -webkit-box;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  line-height: 1.4;\n  white-space: normal;\n  overflow-wrap: break-word;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  font-size: 16px;\n  font-weight: 400;\n  color: rgba(34, 34, 34, 0.7);\n`;\n\nconst PostItem: FunctionComponent<PostItemProps> = ({\n  title,\n  date,\n  categories,\n  summary,\n  link,\n}) => {\n  return (\n    <Link to={link}>\n      <PostItemWrapper>\n        <ContentItemHeader>\n          <div style={{ display: 'flex' }}>\n            {categories.map((category) => (\n              <CategoryItem key={category}>{category}</CategoryItem>\n            ))}\n          </div>\n          <Title>{title}</Title>\n        </ContentItemHeader>\n        <Summary>{summary}</Summary>\n        <Date>{date.slice(0, -1)}</Date>\n      </PostItemWrapper>\n    </Link>\n  );\n};\n\nexport default PostItem;\n","import { MutableRefObject, useEffect, useMemo, useRef, useState } from 'react';\nimport { PostListItemType } from 'types/PostItem.types';\n\nexport type useInfiniteScrollType = {\n  containerRef: MutableRefObject<HTMLDivElement | null>;\n  postList: PostListItemType[];\n};\n\nconst NUMBER_OF_ITEMS_PER_PAGE = 10;\n\n//* IntersectionObserver는 브라우저 API이므로 클라이언트 렌더링시에 사용이 가능하다.\n//* 그러나 Gastby는 Node.js 환경에서 build가 진행되므로 브라우저 API를 사용할 수 없다.\n//* 따라서 useEffect를 이용하여 처음 렌더링 시에 IntersectionObserver 객체를 생성하여 변수에 담아줄 수 있도록 한다.\nconst useInfiniteScroll = (\n  selectedCategory: string,\n  posts: PostListItemType[],\n): useInfiniteScrollType => {\n  const containerRef: MutableRefObject<HTMLDivElement | null> =\n    useRef<HTMLDivElement>(null);\n\n  const observer: MutableRefObject<IntersectionObserver | null> =\n    useRef<IntersectionObserver>(null);\n\n  const [count, setCount] = useState<number>(1);\n\n  const postListByCategory = useMemo<PostListItemType[]>(\n    () =>\n      posts.filter(\n        ({\n          node: {\n            frontmatter: { categories },\n          },\n        }: PostListItemType) =>\n          selectedCategory !== 'All'\n            ? categories.includes(selectedCategory)\n            : true,\n      ),\n    [selectedCategory],\n  );\n\n  useEffect(() => {\n    observer.current = new IntersectionObserver((entries, observer) => {\n      if (!entries[0].isIntersecting) return;\n\n      setCount((value) => value + 1);\n\n      observer.unobserve(entries[0].target);\n    });\n  }, []);\n\n  useEffect(() => setCount(1), [selectedCategory]);\n\n  useEffect(() => {\n    if (\n      NUMBER_OF_ITEMS_PER_PAGE * count >= postListByCategory.length ||\n      containerRef.current === null ||\n      containerRef.current.children.length === 0 ||\n      observer.current === null\n    )\n      return;\n\n    observer.current.observe(\n      containerRef.current.children[containerRef.current.children.length - 1],\n    );\n  }, [count, selectedCategory]);\n\n  return {\n    containerRef,\n    postList: postListByCategory.slice(0, count * NUMBER_OF_ITEMS_PER_PAGE),\n  };\n};\n\nexport default useInfiniteScroll;\n","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport PostItem from './PostItem';\nimport { PostListItemType } from '../../types/PostItem.types';\nimport useInfiniteScroll, {\n  useInfiniteScrollType,\n} from 'hooks/useInfiniteScroll';\n\ntype PostListType = {\n  selectedCategory: string;\n  posts: PostListItemType[];\n};\n\nconst PostListWrapper = styled.section`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  width: 816px;\n  margin: 120px auto 0;\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n    width: 100%;\n    /* padding: 50px 20px; */\n  }\n`;\n\nconst PostList: FunctionComponent<PostListType> = ({\n  selectedCategory,\n  posts,\n}) => {\n  const { containerRef, postList }: useInfiniteScrollType = useInfiniteScroll(\n    selectedCategory,\n    posts,\n  );\n\n  return (\n    <PostListWrapper ref={containerRef}>\n      {postList.map(\n        ({\n          node: {\n            id,\n            fields: { slug },\n            frontmatter,\n          },\n        }: PostListItemType) => (\n          <PostItem {...frontmatter} key={id} link={slug} />\n        ),\n      )}\n    </PostListWrapper>\n  );\n};\n\nexport default PostList;\n","const token = '%[a-f0-9]{2}';\nconst singleMatcher = new RegExp('(' + token + ')|([^%]+?)', 'gi');\nconst multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn [decodeURIComponent(components.join(''))];\n\t} catch {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tconst left = components.slice(0, split);\n\tconst right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch {\n\t\tlet tokens = input.match(singleMatcher) || [];\n\n\t\tfor (let i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher) || [];\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tconst replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD',\n\t};\n\n\tlet match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch {\n\t\t\tconst result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tconst entries = Object.keys(replaceMap);\n\n\tfor (const key of entries) {\n\t\t// Replace all decoded components\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nexport default function decodeUriComponent(encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n}\n","export default function splitOnFirst(string, separator) {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (string === '' || separator === '') {\n\t\treturn [];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n}\n","export function includeKeys(object, predicate) {\n\tconst result = {};\n\n\tif (Array.isArray(predicate)) {\n\t\tfor (const key of predicate) {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(object, key);\n\t\t\tif (descriptor?.enumerable) {\n\t\t\t\tObject.defineProperty(result, key, descriptor);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// `Reflect.ownKeys()` is required to retrieve symbol properties\n\t\tfor (const key of Reflect.ownKeys(object)) {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(object, key);\n\t\t\tif (descriptor.enumerable) {\n\t\t\t\tconst value = object[key];\n\t\t\t\tif (predicate(key, value, object)) {\n\t\t\t\t\tObject.defineProperty(result, key, descriptor);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function excludeKeys(object, predicate) {\n\tif (Array.isArray(predicate)) {\n\t\tconst set = new Set(predicate);\n\t\treturn includeKeys(object, key => !set.has(key));\n\t}\n\n\treturn includeKeys(object, (key, value, object) => !predicate(key, value, object));\n}\n","import decodeComponent from 'decode-uri-component';\nimport splitOnFirst from 'split-on-first';\nimport {includeKeys} from 'filter-obj';\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\n// eslint-disable-next-line unicorn/prefer-code-point\nconst strictUriEncode = string => encodeURIComponent(string).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n\nconst encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result, [encode(key, options), '[', index, ']'].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\t[encode(key, options), '[]'].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[]=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'colon-list-separator': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\t[encode(key, options), ':list='].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), ':list=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\tcase 'bracket-separator': {\n\t\t\tconst keyValueSep = options.arrayFormat === 'bracket-separator'\n\t\t\t\t? '[]='\n\t\t\t\t: '=';\n\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\t// Translate null to an empty string so that it doesn't serialize as 'null'\n\t\t\t\tvalue = value === null ? '' : value;\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), keyValueSep, encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\tencode(key, options),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], value];\n\t\t\t};\n\t\t}\n\n\t\tcase 'colon-list-separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(:list)$/.exec(key);\n\t\t\t\tkey = key.replace(/:list$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], value];\n\t\t\t};\n\t\t}\n\n\t\tcase 'comma':\n\t\tcase 'separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : (value === null ? value : decode(value, options));\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket-separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = /(\\[])$/.test(key);\n\t\t\t\tkey = key.replace(/\\[]$/, '');\n\n\t\t\t\tif (!isArray) {\n\t\t\t\t\taccumulator[key] = value ? decode(value, options) : value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst arrayValue = value === null\n\t\t\t\t\t? []\n\t\t\t\t\t: value.split(options.arrayFormatSeparator).map(item => decode(item, options));\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = arrayValue;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], ...arrayValue];\n\t\t\t};\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...[accumulator[key]].flat(), value];\n\t\t\t};\n\t\t}\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nexport function extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nexport function parse(query, options) {\n\toptions = {\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false,\n\t\t...options,\n\t};\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst returnValue = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn returnValue;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn returnValue;\n\t}\n\n\tfor (const parameter of query.split('&')) {\n\t\tif (parameter === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst parameter_ = options.decode ? parameter.replace(/\\+/g, ' ') : parameter;\n\n\t\tlet [key, value] = splitOnFirst(parameter_, '=');\n\n\t\tif (key === undefined) {\n\t\t\tkey = parameter_;\n\t\t}\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : (['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? value : decode(value, options));\n\t\tformatter(decode(key, options), value, returnValue);\n\t}\n\n\tfor (const [key, value] of Object.entries(returnValue)) {\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const [key2, value2] of Object.entries(value)) {\n\t\t\t\tvalue[key2] = parseValue(value2, options);\n\t\t\t}\n\t\t} else {\n\t\t\treturnValue[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn returnValue;\n\t}\n\n\t// TODO: Remove the use of `reduce`.\n\t// eslint-disable-next-line unicorn/no-array-reduce\n\treturn (options.sort === true ? Object.keys(returnValue).sort() : Object.keys(returnValue).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = returnValue[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexport function stringify(object, options) {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = {encode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',', ...options};\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key]))\n\t\t|| (options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const [key, value] of Object.entries(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = value;\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tif (value.length === 0 && options.arrayFormat === 'bracket-separator') {\n\t\t\t\treturn encode(key, options) + '[]';\n\t\t\t}\n\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n}\n\nexport function parseUrl(url, options) {\n\toptions = {\n\t\tdecode: true,\n\t\t...options,\n\t};\n\n\tlet [url_, hash] = splitOnFirst(url, '#');\n\n\tif (url_ === undefined) {\n\t\turl_ = url;\n\t}\n\n\treturn {\n\t\turl: url_?.split('?')?.[0] ?? '',\n\t\tquery: parse(extract(url), options),\n\t\t...(options && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}),\n\t};\n}\n\nexport function stringifyUrl(object, options) {\n\toptions = {\n\t\tencode: true,\n\t\tstrict: true,\n\t\t[encodeFragmentIdentifier]: true,\n\t\t...options,\n\t};\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = extract(object.url);\n\n\tconst query = {\n\t\t...parse(queryFromUrl, {sort: false}),\n\t\t...object.query,\n\t};\n\n\tlet queryString = stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\tlet hash = getHash(object.url);\n\tif (object.fragmentIdentifier) {\n\t\tconst urlObjectForFragmentEncode = new URL(url);\n\t\turlObjectForFragmentEncode.hash = object.fragmentIdentifier;\n\t\thash = options[encodeFragmentIdentifier] ? urlObjectForFragmentEncode.hash : `#${object.fragmentIdentifier}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n}\n\nexport function pick(input, filter, options) {\n\toptions = {\n\t\tparseFragmentIdentifier: true,\n\t\t[encodeFragmentIdentifier]: false,\n\t\t...options,\n\t};\n\n\tconst {url, query, fragmentIdentifier} = parseUrl(input, options);\n\n\treturn stringifyUrl({\n\t\turl,\n\t\tquery: includeKeys(query, filter),\n\t\tfragmentIdentifier,\n\t}, options);\n}\n\nexport function exclude(input, filter, options) {\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\n\n\treturn pick(input, exclusionFilter, options);\n}\n","import * as queryString from './base.js';\n\nexport default queryString;\n","import React, { FunctionComponent } from 'react';\nimport Navbar from 'components/Main/Navbar';\n// import CategoryList, { CategoryListProps } from 'components/Main/CategoryList';\nimport PostList from 'components/Main/PostList';\nimport Template from 'components/Common/Template';\nimport { graphql } from 'gatsby';\nimport { PostListItemType } from 'types/PostItem.types';\nimport { IGatsbyImageData } from 'gatsby-plugin-image';\nimport queryString, { ParsedQuery } from 'query-string';\n\ntype IndexPageProps = {\n  location: {\n    search: string;\n  };\n  data: {\n    site: {\n      siteMetadata: {\n        title: string;\n        description: string;\n        siteUrl: string;\n      };\n    };\n    allMarkdownRemark: {\n      edges: PostListItemType[];\n    };\n    file: {\n      childImageSharp: {\n        gatsbyImageData: IGatsbyImageData;\n      };\n      publicURL: string;\n    };\n  };\n};\n\nconst IndexPage: FunctionComponent<IndexPageProps> = ({\n  location: { search },\n  data: {\n    site: {\n      siteMetadata: { title, description, siteUrl },\n    },\n    allMarkdownRemark: { edges },\n    file: {\n      childImageSharp: { gatsbyImageData },\n      publicURL,\n    },\n  },\n}) => {\n  const parsed: ParsedQuery<string> = queryString.parse(search);\n  const selectedCategory: string =\n    typeof parsed.category !== 'string' || !parsed.category\n      ? 'All'\n      : parsed.category;\n\n  // const categoryList = useMemo(\n  //   () =>\n  //     edges.reduce(\n  //       (\n  //         list: CategoryListProps['categoryList'],\n  //         {\n  //           node: {\n  //             frontmatter: { categories },\n  //           },\n  //         }: PostListItemType,\n  //       ) => {\n  //         categories.forEach((category) => {\n  //           if (list[category] === undefined) list[category] = 1;\n  //           else list[category]++;\n  //         });\n\n  //         list['All']++;\n\n  //         return list;\n  //       },\n  //       // initialValue\n  //       { All: 0 },\n  //     ),\n  //   // dependency\n  //   [],\n  // );\n\n  return (\n    <Template\n      title={title}\n      description={description}\n      url={siteUrl}\n      image={publicURL}\n    >\n      <Navbar />\n      {/* <CategoryList\n        selectedCategory={selectedCategory}\n        categoryList={categoryList}\n      /> */}\n      <PostList selectedCategory={selectedCategory} posts={edges} />\n    </Template>\n  );\n};\n\nexport default IndexPage;\n\nexport const getPostList = graphql`\n  query getPostList {\n    site {\n      siteMetadata {\n        title\n        description\n        siteUrl\n      }\n    }\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date, frontmatter___title] }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            summary\n            date(formatString: \"YYYY.MM.DD.\")\n            categories\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData(width: 768, height: 400)\n              }\n            }\n          }\n        }\n      }\n    }\n    file(name: { eq: \"logo\" }) {\n      childImageSharp {\n        gatsbyImageData(width: 32, height: 32)\n      }\n      publicURL\n    }\n  }\n`;\n"],"names":["PostItemWrapper","ContentItemHeader","Title","Date","CategoryItem","Summary","_ref","title","date","categories","summary","link","___EmotionJSX","Link","to","style","display","map","category","key","slice","selectedCategory","posts","containerRef","useRef","observer","count","setCount","useState","postListByCategory","useMemo","filter","node","frontmatter","includes","useEffect","current","IntersectionObserver","entries","isIntersecting","value","unobserve","target","length","children","observe","postList","PostListWrapper","useInfiniteScroll","ref","_ref2","id","fields","slug","PostItem","token","singleMatcher","RegExp","multiMatcher","decodeComponents","components","split","decodeURIComponent","join","left","right","Array","prototype","concat","call","decode","input","tokens","match","i","decodeUriComponent","encodedURI","TypeError","replaceMap","exec","result","Object","keys","replace","customDecodeURIComponent","splitOnFirst","string","separator","separatorIndex","indexOf","includeKeys","object","predicate","isArray","descriptor","getOwnPropertyDescriptor","enumerable","defineProperty","Reflect","ownKeys","encodeFragmentIdentifier","Symbol","validateArrayFormatSeparator","encode","options","strict","encodeURIComponent","x","charCodeAt","toString","toUpperCase","keysSorter","sort","a","b","Number","removeHash","hashStart","parseValue","parseNumbers","isNaN","trim","parseBooleans","toLowerCase","extract","queryStart","parse","query","arrayFormat","arrayFormatSeparator","formatter","accumulator","undefined","isEncodedArray","newValue","item","test","arrayValue","flat","parserForArrayFormat","returnValue","create","parameter","parameter_","key2","value2","reduce","Boolean","stringify","shouldFilter","skipNull","skipEmptyString","index","keyValueSep","encoderForArrayFormat","objectCopy","parseUrl","url","url_","hash","parseFragmentIdentifier","fragmentIdentifier","stringifyUrl","queryString","getHash","urlObjectForFragmentEncode","URL","pick","exclude","location","search","data","site","siteMetadata","description","siteUrl","allMarkdownRemark","edges","file","childImageSharp","gatsbyImageData","publicURL","parsed","Template","image","Navbar","PostList"],"sourceRoot":""}