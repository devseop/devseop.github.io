{"componentChunkName":"component---src-templates-post-template-tsx","path":"/js-debouncing-n-throttling/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"f1fb201d-65be-563b-b4cb-4820a32fef79","html":"<p>프로젝트를 하다보면 모든 API 요청을 마구잡이로 보내서 과해지는 경우가 있습니다.\n사용자에 입력에 대한 요청을 조절하여 수행할 수 있도록 어떻게 해야할까요?\n왜 버튼은 여러번 클릭해도 한 번만 입력되는 건지, 검색 결과의 목록 표시는 어떻게 이뤄지는 건지.\n프론트엔드 영역에서의 최적화, Debouncing과 Throttiling은 무엇이고 어떨 때 사용해야 하는 것인지 개념을 알아봤습니다.</p>\n<h2 id=\"Debouncing-디바운싱\" style=\"position:relative;\"><a href=\"#Debouncing-%EB%94%94%EB%B0%94%EC%9A%B4%EC%8B%B1\" aria-label=\"Debouncing 디바운싱 permalink\" class=\"custom-class before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Debouncing (디바운싱)</h2>\n<p>Debouncing은 사용자가 어떠한 이벤트를 몇 번이나 발생시키든 이벤트를 실행하지 않고 일정한 시간이 지난 뒤에 실행하도록 하는 방법입니다.\n예를 들어 사용자가 ‘자바스크립트’를 검색하려고 합니다. 여기서 발생하는 이벤트는 ‘텍스트를 입력’하는 것이고, 입력한 텍스트에 대한 결과를 요청(query)하여 검색창 하단에 보여줄 것입니다. 하지만 입력 패턴을 보자면 ‘ㅈ > 자 > 자ㅂ > … > 자바스크립트’의 순서로 API 요청을 하게 될겁니다. 이러한 과정은 모두 비용이 소모되므로 문제가 됩니다.\n따라서 디바운싱은 위의 예시와 같이 연이어 발생하는 이벤트를 단일 이벤트로 만들어야 하는 기능(입력 이벤트의 검색 결과 표시, 자동 저장 기능 등)에 주로 사용됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> timer<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">debounce</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">func<span class=\"token punctuation\">,</span> delay <span class=\"token operator\">=</span> <span class=\"token number\">200</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token operator\">...</span>args</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>timer<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>timer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      timer <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    timer <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">func</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> delay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"Throttling-쓰로틀링\" style=\"position:relative;\"><a href=\"#Throttling-%EC%93%B0%EB%A1%9C%ED%8B%80%EB%A7%81\" aria-label=\"Throttling 쓰로틀링 permalink\" class=\"custom-class before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Throttling (쓰로틀링)</h2>\n<p>Debouncing이 특정한 시간 이후에 이벤트를 실행하는 방법이라면 Throttling은 사용자가 이벤트는 몇 번이나 발생시키든 일정한 시간을 간격으로 한번만 실행하는 방법입니다.\n예를 들어 사용자가 다음 페이지로 넘어가려고 페이지네이션 버튼을 클릭했다고 가정해봅니다. 하필 이 때 네트워크 환경이 좋지 않아 화면은 계속 로딩 중이고, 사용자는 다음 페이지를 확인하려고 계속 버튼을 클릭합니다. 이 때 뭔가 복작한 작업이 실행되도록 설정했다면 클릭할 때마다 실행이 매우 빈번해지므로 엄청난 렉이 걸릴 것입니다. 이럴 때 Thottling 방법을 이용하여 일정 시간에 한 번씩만 실행되도록 제한을 두는 것입니다.\n<br></p>\n<br>\nDebouncing과 다른 점이라면 반환하는 함수 안에서 timer에 대한 처리 과정입니다. Debouncing은 일정한 시간마다 실행하도록 한다면 Throttling은 최초에 요청을 수행하는 동안 다른 요청은 모두 무시한다는 차이가 있습니다.\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">\n<span class=\"token keyword\">let</span> timer<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">throttle</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">func<span class=\"token punctuation\">,</span> delay <span class=\"token operator\">=</span> <span class=\"token number\">200</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token operator\">...</span>args</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>timer<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">func</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      timer <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>timer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        timer <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> delay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> Fn<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"알아보고나니\" style=\"position:relative;\"><a href=\"#%EC%95%8C%EC%95%84%EB%B3%B4%EA%B3%A0%EB%82%98%EB%8B%88\" aria-label=\"알아보고나니 permalink\" class=\"custom-class before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>알아보고나니</h2>\n<p>Debouncing과 Throttling을 가볍게 알아봤는데 여태 서비스들을 이용했을 때를 되돌아보니 정말 흔하게 사용되는 방법이었습니다. Debouncing은 주로 검색 API, Throttling은 스크롤 이벤트나 페이지네이션 등에도 사용될 수 있는 것 같아요. 이외에도 다른 어떠한 이벤트가 엄청나게 많은 요청을 요구할 수 있게 된다면 Throttling을 이용해 해당 요청에 대한 부담을 줄일 수 있을 것 같습니다. 더 나아가서 Throttling을 적용하고 끝내는 것이 아니라 이 때의 상황을 고려하여 화면을 설계할 수 있다면 사용자 경험에도 긍정적인 지표를 보여주지 않을까 생각합니다.</p>\n<blockquote>\n<p><strong>참고자료</strong></p>\n<ul>\n<li><a href=\"https://onlydev.tistory.com/151\" target=\"_blank\" rel=\"nofollow\">Vintz | 자바스크립트의 디바운싱과 쓰로틀링</a></li>\n<li><a href=\"https://www.freecodecamp.org/news/javascript-debounce-example/\" target=\"_blank\" rel=\"nofollow\">freecodecamp | Debounce – How to Delay a Function in JavaScript (JS ES6 Example)</a></li>\n<li><a href=\"https://www.zerocho.com/category/JavaScript/post/59a8e9cb15ac0000182794fa\" target=\"_blank\" rel=\"nofollow\">제로초 | 쓰로틀링과 디바운싱</a></li>\n</ul>\n</blockquote>","tableOfContents":"<ul>\n<li><a href=\"#debouncing-%EB%94%94%EB%B0%94%EC%9A%B4%EC%8B%B1\">Debouncing (디바운싱)</a></li>\n<li><a href=\"#throttling-%EC%93%B0%EB%A1%9C%ED%8B%80%EB%A7%81\">Throttling (쓰로틀링)</a></li>\n<li><a href=\"#%EC%95%8C%EC%95%84%EB%B3%B4%EA%B3%A0%EB%82%98%EB%8B%88\">알아보고나니</a></li>\n</ul>","frontmatter":{"title":"자바스크립에서 이벤트 제어하기","date":"2023.03.07."}}}]}},"pageContext":{"slug":"/js-debouncing-n-throttling/","allPosts":[{"node":{"id":"cc46ebdf-d56e-53d2-ae84-c356d1276cba","fields":{"slug":"/lorem-ipsum-generator/"},"frontmatter":{"title":"한국의 시를 이용한 로렘 입숨 생성기","date":"2023-10-07"}},"next":{"id":"921c146d-b278-5852-9c6f-e1fbb57cb57d","fields":{"slug":"/wanted-preonboarding-review/"},"frontmatter":{"title":"원티드 프리온보딩 인턴십(프론트엔드) 후기"}},"previous":null},{"node":{"id":"921c146d-b278-5852-9c6f-e1fbb57cb57d","fields":{"slug":"/wanted-preonboarding-review/"},"frontmatter":{"title":"원티드 프리온보딩 인턴십(프론트엔드) 후기","date":"2023-09-17"}},"next":{"id":"b6815257-873c-526f-822d-a29bdca965df","fields":{"slug":"/infinite-scroll/"},"frontmatter":{"title":"무한 스크롤 구현하기"}},"previous":{"id":"cc46ebdf-d56e-53d2-ae84-c356d1276cba","fields":{"slug":"/lorem-ipsum-generator/"},"frontmatter":{"title":"한국의 시를 이용한 로렘 입숨 생성기"}}},{"node":{"id":"b6815257-873c-526f-822d-a29bdca965df","fields":{"slug":"/infinite-scroll/"},"frontmatter":{"title":"무한 스크롤 구현하기","date":"2023-09-02"}},"next":{"id":"d845d508-a997-505a-8949-49e09d24ceb3","fields":{"slug":"/useref/"},"frontmatter":{"title":"useRef 알아보기"}},"previous":{"id":"921c146d-b278-5852-9c6f-e1fbb57cb57d","fields":{"slug":"/wanted-preonboarding-review/"},"frontmatter":{"title":"원티드 프리온보딩 인턴십(프론트엔드) 후기"}}},{"node":{"id":"d845d508-a997-505a-8949-49e09d24ceb3","fields":{"slug":"/useref/"},"frontmatter":{"title":"useRef 알아보기","date":"2023-04-10"}},"next":{"id":"f1fb201d-65be-563b-b4cb-4820a32fef79","fields":{"slug":"/js-debouncing-n-throttling/"},"frontmatter":{"title":"자바스크립에서 이벤트 제어하기"}},"previous":{"id":"b6815257-873c-526f-822d-a29bdca965df","fields":{"slug":"/infinite-scroll/"},"frontmatter":{"title":"무한 스크롤 구현하기"}}},{"node":{"id":"f1fb201d-65be-563b-b4cb-4820a32fef79","fields":{"slug":"/js-debouncing-n-throttling/"},"frontmatter":{"title":"자바스크립에서 이벤트 제어하기","date":"2023-03-07"}},"next":{"id":"81144eb3-1a09-5e36-92b1-f5b0d561c44a","fields":{"slug":"/blog-publish-review/"},"frontmatter":{"title":"Gatsby로 블로그 만들기"}},"previous":{"id":"d845d508-a997-505a-8949-49e09d24ceb3","fields":{"slug":"/useref/"},"frontmatter":{"title":"useRef 알아보기"}}},{"node":{"id":"81144eb3-1a09-5e36-92b1-f5b0d561c44a","fields":{"slug":"/blog-publish-review/"},"frontmatter":{"title":"Gatsby로 블로그 만들기","date":"2023-03-01"}},"next":{"id":"6b7e5a80-3eed-5d27-880c-7a37b4bcbc79","fields":{"slug":"/teo-sprint-11th/"},"frontmatter":{"title":"테오의 스프린트 11기 후기"}},"previous":{"id":"f1fb201d-65be-563b-b4cb-4820a32fef79","fields":{"slug":"/js-debouncing-n-throttling/"},"frontmatter":{"title":"자바스크립에서 이벤트 제어하기"}}},{"node":{"id":"6b7e5a80-3eed-5d27-880c-7a37b4bcbc79","fields":{"slug":"/teo-sprint-11th/"},"frontmatter":{"title":"테오의 스프린트 11기 후기","date":"2022-09-01"}},"next":{"id":"d960a264-36d4-562b-8e91-176a4b81f47c","fields":{"slug":"/nth-type-difference/"},"frontmatter":{"title":"nth-child와 nth-of-type의 차이"}},"previous":{"id":"81144eb3-1a09-5e36-92b1-f5b0d561c44a","fields":{"slug":"/blog-publish-review/"},"frontmatter":{"title":"Gatsby로 블로그 만들기"}}},{"node":{"id":"d960a264-36d4-562b-8e91-176a4b81f47c","fields":{"slug":"/nth-type-difference/"},"frontmatter":{"title":"nth-child와 nth-of-type의 차이","date":"2022-08-16"}},"next":{"id":"8a0e2748-badb-5e01-b707-eebd5900a2ee","fields":{"slug":"/pleasy-intern-review/"},"frontmatter":{"title":"플리지 인턴 후기"}},"previous":{"id":"6b7e5a80-3eed-5d27-880c-7a37b4bcbc79","fields":{"slug":"/teo-sprint-11th/"},"frontmatter":{"title":"테오의 스프린트 11기 후기"}}},{"node":{"id":"8a0e2748-badb-5e01-b707-eebd5900a2ee","fields":{"slug":"/pleasy-intern-review/"},"frontmatter":{"title":"플리지 인턴 후기","date":"2022-07-16"}},"next":{"id":"78ae2e56-7d25-555f-885e-d55e458cb6a8","fields":{"slug":"/2nd-project-review/"},"frontmatter":{"title":"위코드 2차 프로젝트 후기"}},"previous":{"id":"d960a264-36d4-562b-8e91-176a4b81f47c","fields":{"slug":"/nth-type-difference/"},"frontmatter":{"title":"nth-child와 nth-of-type의 차이"}}},{"node":{"id":"78ae2e56-7d25-555f-885e-d55e458cb6a8","fields":{"slug":"/2nd-project-review/"},"frontmatter":{"title":"위코드 2차 프로젝트 후기","date":"2022-06-22"}},"next":{"id":"a91abd96-7814-5c35-a5da-90d266e4e40f","fields":{"slug":"/1st-project-review/"},"frontmatter":{"title":"위코드 1차 프로젝트 후기"}},"previous":{"id":"8a0e2748-badb-5e01-b707-eebd5900a2ee","fields":{"slug":"/pleasy-intern-review/"},"frontmatter":{"title":"플리지 인턴 후기"}}},{"node":{"id":"a91abd96-7814-5c35-a5da-90d266e4e40f","fields":{"slug":"/1st-project-review/"},"frontmatter":{"title":"위코드 1차 프로젝트 후기","date":"2022-06-06"}},"next":null,"previous":{"id":"78ae2e56-7d25-555f-885e-d55e458cb6a8","fields":{"slug":"/2nd-project-review/"},"frontmatter":{"title":"위코드 2차 프로젝트 후기"}}}]}},"staticQueryHashes":[],"slicesMap":{}}